@endPushToStack
0;JMP
(pushToStack)
@SP
A=M
M=D
@SP
M=M+1
@R13
A=M
0;JMP
(endPushToStack)
@returnAddress12
D=A
@R13
M=D
@1
D=A
@ARG
A=D+M
D=M
@pushToStack
0;JMP
(returnAddress12)
@endPopFromStack
0;JMP
(popFromStack)
@SP
M=M-1
A=M
D=M
@R13
A=M
0;JMP
(endPopFromStack)
@returnAddress13
D=A
@R13
M=D
@4
D=A
@R14
M=D
@popFromStack
0;JMP
(returnAddress13)
@R14
A=M
M=D
@returnAddress14
D=A
@R13
M=D
@0
D=A
@pushToStack
0;JMP
(returnAddress14)
@returnAddress15
D=A
@R13
M=D
@0
D=A
@THAT
D=D+M
@R14
M=D
@popFromStack
0;JMP
(returnAddress15)
@R14
A=M
M=D
@returnAddress16
D=A
@R13
M=D
@1
D=A
@pushToStack
0;JMP
(returnAddress16)
@returnAddress17
D=A
@R13
M=D
@1
D=A
@THAT
D=D+M
@R14
M=D
@popFromStack
0;JMP
(returnAddress17)
@R14
A=M
M=D
@returnAddress18
D=A
@R13
M=D
@0
D=A
@ARG
A=D+M
D=M
@pushToStack
0;JMP
(returnAddress18)
@returnAddress19
D=A
@R13
M=D
@2
D=A
@pushToStack
0;JMP
(returnAddress19)
@endSub
0;JMP
(sub)
@returnAddress1
D=A
@R13
M=D
@popFromStack
0;JMP
(returnAddress1)
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
@R14
A=M
0;JMP
(endSub)
@returnAddress20
D=A
@R14
M=D
@sub
0;JMP
(returnAddress20)
@returnAddress21
D=A
@R13
M=D
@0
D=A
@ARG
D=D+M
@R14
M=D
@popFromStack
0;JMP
(returnAddress21)
@R14
A=M
M=D
(MAIN_LOOP_START)
@returnAddress22
D=A
@R13
M=D
@0
D=A
@ARG
A=D+M
D=M
@pushToStack
0;JMP
(returnAddress22)
@returnAddress23
D=A
@R13
M=D
@popFromStack
0;JMP
(returnAddress23)
@COMPUTE_ELEMENT
D;JNE
@END_PROGRAM
0;JMP
(COMPUTE_ELEMENT)
@returnAddress24
D=A
@R13
M=D
@0
D=A
@THAT
A=D+M
D=M
@pushToStack
0;JMP
(returnAddress24)
@returnAddress25
D=A
@R13
M=D
@1
D=A
@THAT
A=D+M
D=M
@pushToStack
0;JMP
(returnAddress25)
@endAdd
0;JMP
(add)
@returnAddress0
D=A
@R13
M=D
@popFromStack
0;JMP
(returnAddress0)
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1
@R14
A=M
0;JMP
(endAdd)
@returnAddress26
D=A
@R14
M=D
@add
0;JMP
(returnAddress26)
@returnAddress27
D=A
@R13
M=D
@2
D=A
@THAT
D=D+M
@R14
M=D
@popFromStack
0;JMP
(returnAddress27)
@R14
A=M
M=D
@returnAddress28
D=A
@R13
M=D
@4
D=M
@pushToStack
0;JMP
(returnAddress28)
@returnAddress29
D=A
@R13
M=D
@1
D=A
@pushToStack
0;JMP
(returnAddress29)
@returnAddress30
D=A
@R14
M=D
@add
0;JMP
(returnAddress30)
@returnAddress31
D=A
@R13
M=D
@4
D=A
@R14
M=D
@popFromStack
0;JMP
(returnAddress31)
@R14
A=M
M=D
@returnAddress32
D=A
@R13
M=D
@0
D=A
@ARG
A=D+M
D=M
@pushToStack
0;JMP
(returnAddress32)
@returnAddress33
D=A
@R13
M=D
@1
D=A
@pushToStack
0;JMP
(returnAddress33)
@returnAddress34
D=A
@R14
M=D
@sub
0;JMP
(returnAddress34)
@returnAddress35
D=A
@R13
M=D
@0
D=A
@ARG
D=D+M
@R14
M=D
@popFromStack
0;JMP
(returnAddress35)
@R14
A=M
M=D
@MAIN_LOOP_START
0;JMP
(END_PROGRAM)
(terminationLoop)
@terminationLoop
0;JMP