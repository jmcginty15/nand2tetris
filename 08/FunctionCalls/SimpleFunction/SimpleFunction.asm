@256
D=A
@SP
M=D
@LCL
M=-A
@ARG
M=-A
@THIS
M=-A
@THAT
M=-A
@returnAddress12
D=A
@R13
M=D
@return:Sys.init
D=A
@pushToStack
0;JMP
(returnAddress12)
@returnAddress13
D=A
@R13
M=D
@LCL
D=M
@pushToStack
0;JMP
(returnAddress13)
@returnAddress14
D=A
@R13
M=D
@ARG
D=M
@pushToStack
0;JMP
(returnAddress14)
@returnAddress15
D=A
@R13
M=D
@THIS
D=M
@pushToStack
0;JMP
(returnAddress15)
@returnAddress16
D=A
@R13
M=D
@THAT
D=M
@pushToStack
0;JMP
(returnAddress16)
@SP
D=M
@LCL
M=D
@5
D=D-A
@ARG
M=D
@Sys.init
0;JMP
(return:Sys.init)
(SimpleFunction.test)
@endPushToStack
0;JMP
(pushToStack)
@SP
A=M
M=D
@SP
M=M+1
@R13
A=M
0;JMP
(endPushToStack)
@returnAddress17
D=A
@R13
M=D
@0
D=A
@pushToStack
0;JMP
(returnAddress17)
@returnAddress18
D=A
@R13
M=D
@0
D=A
@pushToStack
0;JMP
(returnAddress18)
@returnAddress19
D=A
@R13
M=D
@0
D=A
@LCL
A=D+M
D=M
@pushToStack
0;JMP
(returnAddress19)
@returnAddress20
D=A
@R13
M=D
@1
D=A
@LCL
A=D+M
D=M
@pushToStack
0;JMP
(returnAddress20)
@endPopFromStack
0;JMP
(popFromStack)
@SP
M=M-1
A=M
D=M
@R13
A=M
0;JMP
(endPopFromStack)
@endAdd
0;JMP
(add)
@returnAddress0
D=A
@R13
M=D
@popFromStack
0;JMP
(returnAddress0)
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1
@R14
A=M
0;JMP
(endAdd)
@returnAddress21
D=A
@R14
M=D
@add
0;JMP
(returnAddress21)
@endNot
0;JMP
(not)
@returnAddress11
D=A
@R13
M=D
@popFromStack
0;JMP
(returnAddress11)
@SP
A=M
M=!D
@SP
M=M+1
@R14
A=M
0;JMP
(endNot)
@returnAddress22
D=A
@R14
M=D
@not
0;JMP
(returnAddress22)
@returnAddress23
D=A
@R13
M=D
@0
D=A
@ARG
A=D+M
D=M
@pushToStack
0;JMP
(returnAddress23)
@returnAddress24
D=A
@R14
M=D
@add
0;JMP
(returnAddress24)
@returnAddress25
D=A
@R13
M=D
@1
D=A
@ARG
A=D+M
D=M
@pushToStack
0;JMP
(returnAddress25)
@endSub
0;JMP
(sub)
@returnAddress1
D=A
@R13
M=D
@popFromStack
0;JMP
(returnAddress1)
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
@R14
A=M
0;JMP
(endSub)
@returnAddress26
D=A
@R14
M=D
@sub
0;JMP
(returnAddress26)
@endReturn
0;JMP
(return)
@LCL
D=M
@FRAME
M=D
@5
A=D-A
D=M
@RET
M=D
@returnAddress27
D=A
@R13
M=D
@popFromStack
0;JMP
(returnAddress27)
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
@R14
A=M
0;JMP
(endReturn)
@returnAddress28
D=A
@R14
M=D
@return
0;JMP
(returnAddress28)
(terminationLoop)
@terminationLoop
0;JMP