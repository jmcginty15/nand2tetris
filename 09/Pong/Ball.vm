function Ball.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 2
push constant 256
pop this 0
push constant 126
pop this 1
push constant 0
pop this 3
push constant 1
neg
pop this 4
push pointer 0
call Ball.draw 1
pop temp 0
push pointer 0
return
function Ball.getXDir 0
push argument 0
pop pointer 0
push this 3
return
function Ball.getYDir 0
push argument 0
pop pointer 0
push this 4
return
function Ball.setXDir 0
push argument 0
pop pointer 0
push argument 1
pop this 3
push constant 0
return
function Ball.setYDir 0
push argument 0
pop pointer 0
push argument 1
pop this 4
push constant 0
return
function Ball.getX 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getY 0
push argument 0
pop pointer 0
push this 1
return
function Ball.setPos 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push constant 0
return
function Ball.getR 0
push argument 0
pop pointer 0
push this 2
return
function Ball.move 0
push argument 0
pop pointer 0
push argument 1
push argument 1
push constant 2
call Math.divide 2
push constant 2
call Math.multiply 2
eq
push this 3
call Math.abs 1
push constant 2
lt
push this 4
call Math.abs 1
push constant 2
lt
and
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 0
eq
push this 3
push constant 0
lt
push this 0
push this 2
sub
push this 3
call Math.abs 1
push constant 2
call Math.multiply 2
push constant 1
sub
gt
and
or
push this 3
push constant 0
gt
push this 0
push this 2
add
push constant 512
push this 3
call Math.abs 1
push constant 2
call Math.multiply 2
sub
lt
and
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
push constant 0
eq
push this 4
push constant 0
lt
push this 1
push this 2
sub
push this 4
call Math.abs 1
push constant 2
call Math.multiply 2
push constant 1
sub
gt
and
or
push this 4
push constant 0
gt
push this 1
push this 2
add
push constant 256
push this 4
call Math.abs 1
push constant 2
call Math.multiply 2
sub
lt
and
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Ball.erase 1
pop temp 0
push this 0
push constant 2
push this 3
call Math.multiply 2
add
pop this 0
push this 1
push constant 2
push this 4
call Math.multiply 2
add
pop this 1
push pointer 0
call Ball.draw 1
pop temp 0
label IF_FALSE2
label IF_FALSE1
push this 0
push this 2
sub
push constant 0
eq
push this 0
push this 2
sub
push constant 1
eq
or
push this 0
push this 2
add
push constant 511
eq
or
push this 0
push this 2
add
push constant 510
eq
or
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
neg
pop this 3
label IF_FALSE3
label IF_FALSE0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
