// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Inc16(in=feedback, out=feedbackinc);

    Not(in=reset, out=notreset);
    And(a=load, b=notreset, out=loadonly);

    Not(in=load, out=notload);
    And(a=notreset, b=notload, out=neither);
    And(a=neither, b=inc, out=inconly);

    Mux16(a=feedback, b[0..15]=false, sel=reset, out=resetout);
    Mux16(a=resetout, b=in, sel=loadonly, out=loadout);
    Mux16(a=loadout, b=feedbackinc, sel=inconly, out=incout);

    Or(a=load, b=inc, out=loadorinc);
    Or(a=loadorinc, b=reset, out=finalload);
    
    Register(in=incout, load=finalload, out=out, out=feedback);
}
